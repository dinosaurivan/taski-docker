name: Main Taski workflow

on:
  push:
    branches:
      - main

jobs:
  backend_tests:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13.10
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: django_password
          POSTGRES_DB: django_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    
    steps:
      - 
        name: Check out code
        uses: actions/checkout@v4
      - 
        name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - 
        name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 flake8-isort flake8-return flake8-broken-line
          pip install -r ./backend/requirements.txt 
      - 
        name: Test with flake8 
        run: |
          python -m flake8 backend
      - 
        name: Test with django tests
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: django_password
          POSTGRES_DB: django_db    
          DB_HOST: 127.0.0.1
          DB_PORT: 5432     
        run: |
          cd backend
          python manage.py test
  
  build_and_push_backend:
    runs-on: ubuntu-latest
    needs: backend_tests
    steps:
      -
        name: Check out code
        uses: actions/checkout@v4
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3        
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./backend/
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/taski_backend:latest
  
  frontend_tests:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Check out code
        uses: actions/checkout@v4
      - 
        name: Set up nodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - 
        name: Install dependencies
        run: |
          cd frontend
          npm install
      - 
        name: Test frontend
        run: |
          cd frontend
          npm run test
  
  build_and_push_frontend:
    runs-on: ubuntu-latest
    needs: frontend_tests
    steps:
      -
        name: Check out code
        uses: actions/checkout@v4
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3        
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/taski_frontend:latest

  build_and_push_gateway:
    runs-on: ubuntu-latest
    steps:
      -
        name: Check out code
        uses: actions/checkout@v4
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3        
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./gateway/
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/taski_gateway:latest
